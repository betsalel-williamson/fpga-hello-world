name: FPGA CI

on:
  push:
    branches:
      - main # Or your main development branch. Triggers on any push to main.
  pull_request:
    # Triggers on any pull request.
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force a complete rebuild of the Docker image, ignoring cache.'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  packages: write # Grant write permissions for publishing packages

jobs:
  build-and-publish-verilog-dev-image:
    uses: ./.github/workflows/build-and-publish-docker-image-template.yaml
    with:
      dockerfile_context_path: ./docker/verilog-dev-env
      image_name_var: verilog-dev-image
      force_rebuild: false

  verilog-hello-world:
    needs: build-and-publish-verilog-dev-image
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}/verilog-dev-image:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test Verilog design
        run: make -C src/verilog/hello_world test

      - name: Upload simulation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: verilog-simulation-artifacts
          path: |
            src/verilog/hello_world/*.vcd
            src/verilog/hello_world/*.vvp

  build-and-publish-systemverilog-dev-image:
    uses: ./.github/workflows/build-and-publish-docker-image-template.yaml
    with:
      dockerfile_context_path: ./docker/systemverilog-dev-env
      image_name_var: systemverilog-dev-image
      force_rebuild: false

  systemverilog-hello-world:
    needs: build-and-publish-systemverilog-dev-image
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}/systemverilog-dev-image:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test SystemVerilog design
        run: make -C src/systemverilog/hello_world test

      - name: Upload SystemVerilog simulation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: systemverilog-simulation-artifacts
          path: |
            src/systemverilog/hello_world/obj_dir/

  build-and-publish-vhdl-dev-image:
    uses: ./.github/workflows/build-and-publish-docker-image-template.yaml
    with:
      dockerfile_context_path: ./docker/vhdl-dev-env
      image_name_var: vhdl-dev-image
      force_rebuild: false

  vhdl-hello-world:
    needs: build-and-publish-vhdl-dev-image
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}/vhdl-dev-image:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test VHDL design
        run: |
          ghdl --version
          make -C src/vhdl/hello_world test
          test -f src/vhdl/hello_world/hello_world || { echo "Error: hello_world executable not found!"; exit 1; }
          ls -l src/vhdl/hello_world

      - name: Upload SystemVerilog simulation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: systemverilog-simulation-artifacts
          path: |
            src/vhdl/hello_world/hello_world